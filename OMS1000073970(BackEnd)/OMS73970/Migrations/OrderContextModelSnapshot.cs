// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OMS73970.models;

namespace OMS73970.Migrations
{
    [DbContext(typeof(OrderContext))]
    partial class OrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OMS73970.models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartAmount");

                    b.Property<int>("CartQuantity");

                    b.Property<int>("CustId");

                    b.Property<int>("ItemId");

                    b.HasKey("CartId");

                    b.HasIndex("CustId");

                    b.HasIndex("ItemId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("OMS73970.models.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustAddress")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(20);

                    b.Property<string>("CustAltPhone")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<decimal?>("CustBalance");

                    b.Property<string>("CustCity")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CustEmail")
                        .IsRequired();

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CustPass")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CustPhone")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CustState")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("CustId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("OMS73970.models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemCategory")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("ItemCost");

                    b.Property<int?>("ItemDiscount");

                    b.Property<string>("ItemName");

                    b.Property<int>("ItemQuantity");

                    b.Property<string>("ItemUrl");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("OMS73970.models.OrderItems", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Discount");

                    b.Property<int>("ItemId");

                    b.Property<int>("OrderId");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Quantity");

                    b.Property<int>("TotalPrice");

                    b.Property<int>("UnitPrice");

                    b.HasKey("OrderItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OMS73970.models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustId");

                    b.Property<int>("OrderCost");

                    b.Property<DateTime?>("OrderDate");

                    b.Property<int>("OrderQuantity");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("OrderTotal");

                    b.HasKey("OrderId");

                    b.HasIndex("CustId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OMS73970.models.TempItems", b =>
                {
                    b.Property<int>("TempItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustId");

                    b.Property<string>("Discount");

                    b.Property<string>("ItemCategory");

                    b.Property<int>("ItemId");

                    b.Property<int>("TotalPrice");

                    b.Property<int>("UnitPrice");

                    b.HasKey("TempItemId");

                    b.HasIndex("CustId");

                    b.HasIndex("ItemId");

                    b.ToTable("TempItems");
                });

            modelBuilder.Entity("OMS73970.models.Cart", b =>
                {
                    b.HasOne("OMS73970.models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS73970.models.Items", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS73970.models.OrderItems", b =>
                {
                    b.HasOne("OMS73970.models.Items", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS73970.models.Orders", "Orders")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS73970.models.Orders", b =>
                {
                    b.HasOne("OMS73970.models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OMS73970.models.TempItems", b =>
                {
                    b.HasOne("OMS73970.models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OMS73970.models.Items", "Items")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
